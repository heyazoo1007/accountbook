name: Deploy to Amazon EC2

on:
  push:
    branches:
      - deploy/#27

  env:
    AWS_REGION: ap-northeast-2
    S3_BUCKET_NAME: accountbookserver-s3-bucket
    CODE_DEPLOY_APPLICATION_NAME: accountbookserver-codedeploy-app
    CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: accountbookserver-deployment-group


  permissions:
    contents: read

  jobs:
    deploy:
      name: Deploy
      runs-on: ubuntu-20.04
      environment: production

  stpes:
    # (1) 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'

    # (3) Git Secret 을 활용한 application-xxx.properties 생성
    - name: Create spring properties
      run: |
        touch src/main/resources/application-prod.properties
        echo "$PROD_APPLICATION" > application-prod.properties.b64
        base64 -d -i application-prod.properties.b64 > src/main/resources/application-prod.properties
      env:
        PROD_APPLICATION: ${{ secrets.PROD_APPLICATION }}

    # (4) Gradle build (Test 제외)
    - name: Build with Gradle
      uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
      with:
        arguments: clean build -x test

    # (5) 하위 디렉토리 생성
    - name: Make Directory
      run: mkdir deploy

  # (6) JAR 파일 복사
  - name: Copy Jar File
    run: cp ./build/libs/*.jar ./deploy/

  # (7) JAR 디렉토리 -> ZIP
  - name: Zip Directory
    run: zip -r -qq -j ./spring-project.zip ./deploy

  # (8) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
  - name: Configure AWS credentials
    uses: aws-actions/configure-aws-credentials@v1
    with:
      aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
      aws-secret-access-key : ${{ secrets.AWS_SECRET_ACCES_KEY }}
      aws-region: ${{ env.AWS_REGION }}

  # (9) 빌드 결과물을 S3 버킷에 업로드
  - name: Upload to AWS S3
    run: |
      aws deploy push \
        --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
        --ignore-hidden-files \
        --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
        --source . 

  # (10) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
  - name: Deploy to AWS EC2 from S3
    run: |
      aws deploy create-deployment \
        --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
        --s3-location bucket-$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
